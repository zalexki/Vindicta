name: Release Drafter

on:
  push:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@master
      
    - name: Validate Config
      run: python3 tools/SQF-validate/config_style_checker.py
      
    - name: Check for BOM
      uses: arma-actions/bom-check@master
      with:
        path: 'Vindicta.Altis'

  validate-with-sqf-vm:
    runs-on: windows-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@master

    - name: Validate SQF with SQF-VM
      run: |
        cd Vindicta.Altis
        ..\tools\SQF-VM\sqfvm.exe -a --no-execute-print --disable-macro-warnings --load . -i D:\a\Vindicta\Vindicta\Vindicta.Altis\Tests\RunTests.sqf

  build:
    runs-on: windows-latest
    # needs: [validate, validate-with-sqf-vm]
    steps:
    - uses: actions/checkout@master
      
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
        
    - name: Build
      run: |
        $env:RUST_BACKTRACE=1
        cd Vindicta-Addon
        .\tools\buildv2.ps1
        
    - uses: actions/upload-artifact@v1
      with:
        name: build
        path: Vindicta-Addon/release

    - uses: actions/upload-artifact@v1
      with:
        name: dev
        path: Vindicta-Addon/dev

  update-release-draft:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Draft Release
      id: draft_release
      uses: release-drafter/release-drafter@v5.6.1
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: echo upload_url
      run:
        echo ${{ steps.draft_release.outputs.upload_url }}
      
    # ****** DISABLED ****** until we can get it working iteratively (i.e. replace existing release
    # - name: Download build
    #  if: ${{ false }}
    #  uses: actions/download-artifact@v1
    #  with:
    #    name: build
    
    # - name: Zip for Release
    #  run: |
    #    cd build
    #    zip -r vindicta.zip @vindicta
    #    ls
    
    # - name: Upload build to draft release
    #  if: ${{ false }}
    #  uses: actions/upload-release-asset@v1.0.1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.draft_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #    asset_path: ./build/vindicta.zip
    #    asset_name: vindicta.zip
    #    asset_content_type: application/zip

    # - name: Download dev
    #   uses: actions/download-artifact@v1
    #   with:
    #     name: dev

    # - name: Upload pbo to dev server
    #   run: |
    #     cd dev
    #     ls
    #     for f in *.altis.pbo; do mv "$f" "${f%.altis.pbo}_${{github.run_number}}.altis.pbo"; done
    #     for f in *.enoch.pbo; do mv "$f" "${f%.enoch.pbo}_${{github.run_number}}.enoch.pbo"; done
    #     ls
    #     sudo apt-get install wput
    #     wput *.pbo "ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_SERVER }}/ugs-eu-germany-1.armahosts.com_2322/mpmissions/"
 